
QUEUE
=====
In Scala, the Queue collection is a data structure that follows the
First-In-First-Out (FIFO) principle.  It allows elements to be added
to the end of the queue, and removed from the front of the queue.
Scala provides both mutable and immutable versions of Queue.

The Scala Queue class is implemented as a pair of Lists.  One of these
two Lists contains the 'IN ELEMENTS', and the other List contains the
'OUT ELEMENTS'.

* Dequeue - The process of removing element(s) from a Scala Queue's 'OUT LIST'.

* Enqueue - The process of adding element(s) to a Scala Queue's 'IN LIST'.

When the 'OUT LIST' becomes empty, the queue is pivoted by replacing the
'OUT LIST' by in.reverse, and in by Nil.



==========================================================================

import scala.collection.immutable.Queue

@main def main() =
  // Initialize a Queue.
  val queue_1:Queue[String] = Queue("Apple", "Banana", "Cherry")

  // Add one element to a Queue via the enqueue method.
  var queVar:Queue[String] = queue_1.enqueue("Date")
  // NOTICE: The enqueue method doesn't alter the contents of queue_1;
  //         it only returns a new Queue collection.
  println(s"1) queue_1 = $queue_1") // PRINTS: 1) queue_1 = Queue(Apple, Banana, Cherry)
  println(s"2) queVar = $queVar")   // PRINTS: 2) queVar = Queue(Apple, Banana, Cherry, Date)

  // Add one element to a Queue via the :+ operator.
  queVar = queVar :+ "Elderberry"
  println(s"3) queVar = $queVar") // PRINTS: 3) queVar = Queue(Apple, Banana, Cherry, Date, Elderberry)

  val (firstElement, remainingQueue) = queVar.dequeue
  println(s"4) queVar = $queVar") // PRINTS: 4) queVar = Queue(Apple, Banana, Cherry, Date, Elderberry)
  println(s"5) Dequeued element = $firstElement")  // PRINTS: 5) Dequeued element = Apple
  println(s"6) Remaining queue = $remainingQueue") // PRINTS: 6) Remaining queue = Queue(Banana, Cherry, Date, Elderberry)
  println(s"7) queVar.head = ${queVar.head}")      // PRINTS: 7) queVar.head = Apple
  println(s"8) queVar.tail = ${queVar.tail}")      // PRINTS: 8) queVar.tail = Queue(Banana, Cherry, Date, Elderberry)

  queVar = Queue.empty[String]
  // Enqueue elements (add to the "in" list)
  queVar = queVar.enqueue("One")
  queVar = queVar.enqueue("Two")
  queVar = queVar.enqueue("Three")
  println(s"9) queVar = $queVar") // PRINTS: 9) queVar = Queue(One, Two, Three)

  // The following List[String] passed to the enqueue method could be
  // a different collection like an Array[String], Vector[String], etc. 
  queVar = queVar.enqueueAll(List("Four", "Five", "Six"))
  println(s"10) queVar = $queVar") // PRINTS: 10) queVar = Queue(One, Two, Three, Four, Five, Six)
end main
