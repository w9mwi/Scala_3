ZIP AND UNZIP METHODS
=====================
The following sample code shows how to use the methods
named zip and unzip on a List.  Keep in mind that the
zip and unzip methods are included in other Scala
collections (i.e., Array, Vector, etc.).  Once you
know how the zip and unzip methods work on a List,
you'll know how to use them on other collections.

@main def main():Unit =
  type intTuple = (Int, Int)
  val intList_1:List[Int] = List(0, 123, 456, 789)
  val intList_2:List[Int] = List(789, 456, 123, 0)

  // ============================================================
  // Zip together two Lists of the same size, in both directions.
  var zippedList:List[intTuple] = intList_1.zip(intList_2)
  println(s"1) zippedList = $zippedList")
  // PRINTS: 1) zippedList = List((0,789), (123,456), (456,123), (789,0))

  zippedList = intList_2.zip(intList_1)
  println(s"2) zippedList = $zippedList")
  // PRINTS: 2) zippedList = List((789,0), (456,123), (123,456), (0,789))
  // ============================================================

  val intList_3:List[Int] = List(100, 200, 300, 400, 500)
  val intList_4:List[Int] = List(600, 700)

  // ============================================================
  // When two Lists have different sizes, the zip method returns
  // a List having the same size as the smaller List.  Therefore,
  // some elements from the larger List won't be included in the
  // zippedList result.
  zippedList = intList_3.zip(intList_4)
  println(s"3) zippedList = $zippedList")
  // PRINTS: 3) zippedList = List((100,600), (200,700))

  zippedList = intList_4.zip(intList_3)
  println(s"4) zippedList = $zippedList")
  // PRINTS: 4) zippedList = List((600,100), (700,200))
  // ============================================================

  // ============================================================
  // When two Lists have different sizes, the zipAll method
  // returns a List having the same size as the larger List.
  // Elements missing from the smaller of the two Lists will
  // be set to one of the two default values passed to the
  // zipAll method, as shown here.
  zippedList = intList_3.zipAll(intList_4, -1, -2)
  println(s"5) zippedList = $zippedList")
  // PRINTS: 5) zippedList = List((100,600), (200,700), (300,-2), (400,-2), (500,-2))
  zippedList = intList_4.zipAll(intList_3, -1, -2)
  println(s"6) zippedList = $zippedList")
  // PRINTS: 6) zippedList = List((600,100), (700,200), (-1,300), (-1,400), (-1,500))
  // ============================================================

  // ============================================================
  // The unzip method can be called on any List that has been
  // zipped, which means any List that contains a tuple pair
  // of Lists in each of its elements.  The unzip method returns
  // two Lists in a tuple pair, as shown here.
  val unzippedList:(List[Int], List[Int]) = zippedList.unzip
  println(s"7) unzippedList = $unzippedList")
  // PRINTS: 7) unzippedList = (List(600, 700, -1, -1, -1),List(100, 200, 300, 400, 500))
end main
