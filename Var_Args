VARIABLE NUMBER OF ARGUMENTS
============================
Methods in Scala can be defined so a single argument can actually accept
any number of arguments.  This concept is often referred to as "varargs",
a "variable number of arguments".

In Scala, a method can be defined to accept multiple arguments in a
single argument list, like this:

def add(x:Int, y:Int):Int = x + y

A method can also be defined to accept multiple argument lists, like this:

def add(x:Int)(y:Int):Int = x + y

Methods defined with multiple argument lists are used to implement
the concept known as "currying", which is covered in the "Currying"
section.

IMPORTANT: Only the last argument in a method's argument list can accept
           a variable number of arguments.  A method that contains multiple
           argument lists (a curried method) can accept one vararg per
           argument list, which also must be the last argument in the
           argument list.

The following program shows how to implement a method that accepts varargs.

/*********************************************************
 * When an asterisk char (*) appears after an argument in a method's argument
 * list (as shown below), it designates that the argument can be passed
 * zero arguments, one argument, or multiple arguments separated by commas.
 * Read in-line comments below for details.
 *********************************************************/
def variableNoOfStringArgs(str:String *):String =
{
  // This method can get passed any number of String arguments, which all
  // get assigned to the single argument named str.  Although the str
  // argument appears to be declared as a String, it's not a String.
  // The asterisk char (*) tells the compiler that str can receive any
  // number of arguments.  Therefore, an argument designated as a vararg
  // becomes a Seq type, so it can hold any number of arguments.  In this
  // example str becomes a Seq[String] type because it's declared as a
  // String in the argument.
  //
  // Here, we verify that str is of type: Seq[String]
  if (str.isInstanceOf[Seq[String]])
    println("str is of type: Seq[String]") // PRINTS: str is of type: Seq[String]

  // Return all strings passed to this method in a single string, separated by space (" ") chars.
  str.mkString(" ")
}

@main def main() =
  // Confirm the method can be passed no arguments.
  var strResult = variableNoOfStringArgs()
  println(s"1) strResult = $strResult\n") // PRINTS: 1) strResult =

  // Confirm the method can be passed one argument.
  strResult = variableNoOfStringArgs("Wednesday")
  println(s"2) strResult = $strResult\n") // PRINTS: 2) strResult = Wednesday

  // Confirm the method can be passed multiple arguments.
  strResult = variableNoOfStringArgs("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
  println(s"3) strResult = $strResult\n") // PRINTS: 3) strResult = Sunday Monday Tuesday Wednesday Thursday Friday Saturday
