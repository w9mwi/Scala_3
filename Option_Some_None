OPTION
======
The Scala Option class can be thought of as a Scala List that contains
either one element, or no elements.  So an Option type will always
contain either a single value, or no value.

When an Option contains a single value, that value is wrapped in the Some class.
When an Option contains no value, that value is represented as the None object.
Therefore, any instance of scala.Option will be one of the following:

   * scala.Some  (A Scala class that extends the Option class.)
   * scala.None  (A Scala object that extends the Option class.)


The following program demonstrates that Option(54321) and Some(54321)
are equivalent expressions.

@main def main() =
  val number_1:Option[Int] = Option(54321)
  val number_2:Some[Int]   = Some(54321)
  val number_3:None.type   = None

  if (number_1 == number_2)
  then println("number_1 == number_2") // PRINTS: number_1 == number_2

  number_2 match
    case number_1 => println("number_2 == number_1") // PRINTS: number_2 == number_1
    case _        => println("number_2 != number_1") // This line never executes.
end main
